-- MySQL Script generated by MySQL Workbench
-- Thu Dec 12 14:01:00 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema uacontenthub
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema uacontenthub
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `uacontenthub` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `uacontenthub` ;

-- -----------------------------------------------------
-- Table `uacontenthub`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uacontenthub`.`user` ;

CREATE TABLE IF NOT EXISTS `uacontenthub`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NOT NULL,
  `Password` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NOT NULL,
  `Name` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NOT NULL,
  `Email` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NOT NULL,
  `Role` ENUM('user', 'creator', 'admin') NOT NULL,
  `Registration_Date` DATE NOT NULL COMMENT 'UTC TIME\n',
  `Status` ENUM('active', 'banned') NOT NULL DEFAULT 'active' COMMENT 'banned=deleted all info about user',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `Email` (`Email` ASC) VISIBLE,
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `uacontenthub`.`profile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uacontenthub`.`profile` ;

CREATE TABLE IF NOT EXISTS `uacontenthub`.`profile` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `UserID` INT NOT NULL,
  `Description` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NOT NULL,
  `AvatarURL` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NULL DEFAULT NULL,
  `TikTok` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NULL DEFAULT NULL,
  `Instagram` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_520_ci' NULL,
  `Twitch` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NULL,
  `Youtube` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NULL,
  `Subscribers_Count` INT NULL DEFAULT 0,
  `Rating` INT NULL,
  INDEX `fk_profile_user1_idx` (`UserID` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_profile_user1`
    FOREIGN KEY (`UserID`)
    REFERENCES `uacontenthub`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `uacontenthub`.`post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uacontenthub`.`post` ;

CREATE TABLE IF NOT EXISTS `uacontenthub`.`post` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `profile_UserID` INT NOT NULL,
  `Content` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NOT NULL,
  `Publish_Date` DATE NOT NULL,
  `Like_Count` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_post_profile1_idx` (`profile_UserID` ASC) VISIBLE,
  CONSTRAINT `fk_post_profile1`
    FOREIGN KEY (`profile_UserID`)
    REFERENCES `uacontenthub`.`profile` (`UserID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `uacontenthub`.`complaint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uacontenthub`.`complaint` ;

CREATE TABLE IF NOT EXISTS `uacontenthub`.`complaint` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `UserID` INT NOT NULL,
  `PostID` INT NULL COMMENT 'reported Post',
  `profile_UserID` INT NULL,
  `Reason` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NOT NULL,
  `Status` ENUM('pending', 'resolved', 'dismissed') NOT NULL DEFAULT 'pending',
  PRIMARY KEY (`id`),
  INDEX `UserID` (`UserID` ASC) VISIBLE,
  INDEX `PostID` (`PostID` ASC) VISIBLE,
  INDEX `fk_complaint_profile1_idx` (`profile_UserID` ASC) VISIBLE,
  CONSTRAINT `complaint_ibfk_1`
    FOREIGN KEY (`UserID`)
    REFERENCES `uacontenthub`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `complaint_ibfk_2`
    FOREIGN KEY (`PostID`)
    REFERENCES `uacontenthub`.`post` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_complaint_profile1`
    FOREIGN KEY (`profile_UserID`)
    REFERENCES `uacontenthub`.`profile` (`UserID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `uacontenthub`.`likes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uacontenthub`.`likes` ;

CREATE TABLE IF NOT EXISTS `uacontenthub`.`likes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `UserID` INT NOT NULL,
  `PostID` INT NOT NULL,
  `Like_Date` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `UserID` (`UserID` ASC) VISIBLE,
  INDEX `PostID` (`PostID` ASC) VISIBLE,
  CONSTRAINT `like_ibfk_1`
    FOREIGN KEY (`UserID`)
    REFERENCES `uacontenthub`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `like_ibfk_2`
    FOREIGN KEY (`PostID`)
    REFERENCES `uacontenthub`.`post` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `uacontenthub`.`review`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uacontenthub`.`review` ;

CREATE TABLE IF NOT EXISTS `uacontenthub`.`review` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `UserID` INT NOT NULL,
  `CreatorID` INT NOT NULL,
  `Text` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NOT NULL,
  `Rating` INT NOT NULL COMMENT '1 to 5\n',
  `Review_Date` DATE NOT NULL,
  `Status` ENUM('not_Approved', 'Approved') NOT NULL DEFAULT 'not_Approved',
  PRIMARY KEY (`id`),
  INDEX `UserID` (`UserID` ASC) VISIBLE,
  INDEX `CreatorID` (`CreatorID` ASC) VISIBLE,
  CONSTRAINT `review_ibfk_1`
    FOREIGN KEY (`UserID`)
    REFERENCES `uacontenthub`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `review_ibfk_2`
    FOREIGN KEY (`CreatorID`)
    REFERENCES `uacontenthub`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `uacontenthub`.`subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uacontenthub`.`subscription` ;

CREATE TABLE IF NOT EXISTS `uacontenthub`.`subscription` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `UserID` INT NOT NULL,
  `CreatorID` INT NOT NULL,
  `Subscription_Date` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `UserID` (`UserID` ASC) VISIBLE,
  INDEX `CreatorID` (`CreatorID` ASC) VISIBLE,
  CONSTRAINT `subscription_ibfk_1`
    FOREIGN KEY (`UserID`)
    REFERENCES `uacontenthub`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `subscription_ibfk_2`
    FOREIGN KEY (`CreatorID`)
    REFERENCES `uacontenthub`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `uacontenthub`.`tags`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uacontenthub`.`tags` ;

CREATE TABLE IF NOT EXISTS `uacontenthub`.`tags` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uacontenthub`.`profile_has_tags`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uacontenthub`.`profile_has_tags` ;

CREATE TABLE IF NOT EXISTS `uacontenthub`.`profile_has_tags` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `tags_id` INT NOT NULL,
  `profile_UserID` INT NOT NULL,
  PRIMARY KEY (`id`, `tags_id`, `profile_UserID`),
  INDEX `fk_profile_has_tags_tags1_idx` (`tags_id` ASC) VISIBLE,
  INDEX `fk_profile_has_tags_profile1_idx` (`profile_UserID` ASC) VISIBLE,
  CONSTRAINT `fk_profile_has_tags_tags1`
    FOREIGN KEY (`tags_id`)
    REFERENCES `uacontenthub`.`tags` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_profile_has_tags_profile1`
    FOREIGN KEY (`profile_UserID`)
    REFERENCES `uacontenthub`.`profile` (`UserID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `uacontenthub`;

DELIMITER $$

USE `uacontenthub`$$
DROP TRIGGER IF EXISTS `uacontenthub`.`profile_BEFORE_INSERT` $$
USE `uacontenthub`$$
CREATE DEFINER = CURRENT_USER TRIGGER `uacontenthub`.`profile_BEFORE_INSERT` BEFORE INSERT ON `profile` FOR EACH ROW
BEGIN
DECLARE user_role VARCHAR(255);

	SELECT Role INTO user_role
	FROM `user`
	WHERE `id` = NEW.UserID;

    IF user_role = 'admin' OR user_role = 'user' THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Адміністратори та звичайні користувачі не можуть мати свої профілі';
    END IF;
END$$


USE `uacontenthub`$$
DROP TRIGGER IF EXISTS `uacontenthub`.`check_complaint_admin_BEFORE_INSERT` $$
USE `uacontenthub`$$
CREATE DEFINER = CURRENT_USER TRIGGER `uacontenthub`.`check_complaint_admin_BEFORE_INSERT` BEFORE INSERT ON `complaint` FOR EACH ROW
BEGIN
DECLARE user_role VARCHAR(255);
    SELECT Role INTO user_role
    FROM `user`
    WHERE `id` = NEW.UserID;

    IF user_role = 'admin'OR user_role='creator' THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Адміністратори та креатори не можуть залишати скарги';
    END IF;
END$$


USE `uacontenthub`$$
DROP TRIGGER IF EXISTS `uacontenthub`.`check_like_admin_BEFORE_INSERT` $$
USE `uacontenthub`$$
CREATE DEFINER = CURRENT_USER TRIGGER `uacontenthub`.`check_like_admin_BEFORE_INSERT` BEFORE INSERT ON `likes` FOR EACH ROW
BEGIN
 DECLARE user_role VARCHAR(255);

    SELECT Role INTO user_role
    FROM `user`
    WHERE `id` = NEW.UserID;

    IF user_role = 'admin' THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Адміністратори не можуть залишати лайки';
    END IF;
END$$


USE `uacontenthub`$$
DROP TRIGGER IF EXISTS `uacontenthub`.`like_AFTER_INSERT` $$
USE `uacontenthub`$$
CREATE DEFINER = CURRENT_USER TRIGGER `uacontenthub`.`like_AFTER_INSERT`
AFTER INSERT ON `likes` FOR EACH ROW
BEGIN
UPDATE `post`
SET LikeCount=LikeCount+1
Where id=NEW.PostID;
END$$


USE `uacontenthub`$$
DROP TRIGGER IF EXISTS `uacontenthub`.`like_AFTER_DELETE` $$
USE `uacontenthub`$$
CREATE DEFINER = CURRENT_USER TRIGGER `uacontenthub`.`like_AFTER_DELETE` AFTER DELETE ON `likes` FOR EACH ROW
BEGIN
	UPDATE `post`
    SET LikeCount = LikeCount - 1
    WHERE id = OLD.PostID;
END$$


USE `uacontenthub`$$
DROP TRIGGER IF EXISTS `uacontenthub`.`check_review_BEFORE_INSERT` $$
USE `uacontenthub`$$
CREATE DEFINER = CURRENT_USER TRIGGER `uacontenthub`.`check_review_BEFORE_INSERT` BEFORE INSERT ON `review` FOR EACH ROW
BEGIN
 DECLARE user_role VARCHAR(255);
    SELECT Role INTO user_role
    FROM `user`
    WHERE `id` = NEW.UserID;

    IF user_role = 'admin' OR user_role = 'creator' THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Адміністратори та креейтори не можуть робити рецензії';
    END IF;
END$$


USE `uacontenthub`$$
DROP TRIGGER IF EXISTS `uacontenthub`.`review_AFTER_UPDATE` $$
USE `uacontenthub`$$
CREATE DEFINER = CURRENT_USER TRIGGER `uacontenthub`.`review_AFTER_UPDATE` AFTER UPDATE ON `review` FOR EACH ROW
BEGIN
    DECLARE review_count INT;
    DECLARE avg_rating DECIMAL(10,2);

    -- Перевірка статусу
    IF NEW.Status = 'approved' THEN
        -- рахуємо кількість рецензій
        SELECT COUNT(*), AVG(Rating) INTO review_count, avg_rating
        FROM review
        WHERE CreatorID = NEW.CreatorID AND Status = 'approved';

        -- оновлення рейтингу
        IF review_count > 5 THEN
            UPDATE profile
            SET Rating = avg_rating
            WHERE UserID = NEW.CreatorID;
        END IF;
    END IF;
END$$


USE `uacontenthub`$$
DROP TRIGGER IF EXISTS `uacontenthub`.`check_subscription_BEFORE_INSERT` $$
USE `uacontenthub`$$
CREATE DEFINER = CURRENT_USER TRIGGER `uacontenthub`.`check_subscription_BEFORE_INSERT` BEFORE INSERT ON `subscription` FOR EACH ROW
BEGIN
 DECLARE user_role VARCHAR(255);

    SELECT Role INTO user_role
    FROM `user`
    WHERE `id` = NEW.UserID;

    IF user_role = 'admin' OR user_role='creator'  THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Адміністратори та креатори не можуть підписуватися';
    END IF;
END$$


USE `uacontenthub`$$
DROP TRIGGER IF EXISTS `uacontenthub`.`subscription_AFTER_INSERT` $$
USE `uacontenthub`$$
CREATE DEFINER = CURRENT_USER TRIGGER `uacontenthub`.`subscription_AFTER_INSERT`
 AFTER INSERT ON `subscription` FOR EACH ROW
BEGIN
UPDATE `profile`
    SET Subscribers_Count = Subscribers_Count + 1
    WHERE UserID = NEW.CreatorID;
END$$


USE `uacontenthub`$$
DROP TRIGGER IF EXISTS `uacontenthub`.`subscription_AFTER_DELETE` $$
USE `uacontenthub`$$
CREATE DEFINER = CURRENT_USER TRIGGER `uacontenthub`.`subscription_AFTER_DELETE` AFTER DELETE ON `subscription` FOR EACH ROW
BEGIN
 UPDATE `profile`
    SET Subscribers_Count = Subscribers_Count - 1
    WHERE UserID = OLD.CreatorID;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
